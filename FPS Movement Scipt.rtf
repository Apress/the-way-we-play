{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12060\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class PlayerMovement : MonoBehaviour\
\{\
	public CharacterController controller;\
\
	public float speed = 12f;\
	public float gravity = -9.81f;\
	public float jumpHeight = 3f;\
\
	public Transform groundCheck;\
	public float groundDistance = 0.4;\
	public LayerMask groundMask;\
\
	Vector3 velocity;\
	bool isGrounded;\
\
	void Update()\
	\{\
		isGrounded = Physics.CheckSphere(groundCheck.position, groundDistance, groundMask);\
\
		if(isGrounded && velocity.y < 0)\
		\{\
			velocity.y = -2fp;\
		\}\
\
		float x = Input.GetAxis(\'93Horizontal\'94);\
		float z = Input.GetAxis(\'93Vertical\'94);\
\
		Vector3 move = transform.right * x + transform.forward * z;\
\
		controller.Move(move * speed * Time.deltaTime);\
\
		if(Input.GetButtonDown(\'93Jump\'94) && isGrounded)\
		\{\
			velocity.y = Mathf.Sqrt(jumpHeight * -2f * gravity);\
		\}\
\
		velocity.y += gravity * Time.deltaTime;\
\
		controller.Move(velocity * Time.deltaTime;\
	\}\
\}}